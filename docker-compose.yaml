version: '3'
services:
  backend:
    container_name: backend
    build: ./backend/
    restart: always
    ports:
      - "8080:8080"
    environment:
      - VITE_DB_HOST=postgres
      - VITE_IP_ADDR=0.0.0.0
      - VITE_PORT=8080
      - VITE_LOGS_DIR=logs/
      - VITE_DB_PORT=5432
      - VITE_DB_USER=experience
      - VITE_DB_PASS=experience
      - VITE_DB_NAME=experience
      # - VITE_ADMIN_PASSWORD=adminpw
      # - VITE_JWT_SECRET=superSecret
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build: ./frontend/
    restart: always
    ports:
      - "88:80" # We need to map here for convenience, so we don't conflict with a potential possible local server
    environment:
      - VITE_BACKEND_IP=backend
      - VITE_BACKEND_PORT=8080
      - VITE_AUTH_IP=authentication
      - VITE_AUTH_PORT=3000

#       VITE_BACKEND_IP=127.0.0.1
# VITE_BACKEND_PORT=8080
# VITE_AUTH_IP=127.0.0.1
# VITE_AUTH_PORT=3000

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432" 
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=experience
      - POSTGRES_PASSWORD=experience
      - POSTGRES_DB=experience

  authentication:
    container_name: authentication
    # build: 
    #   context: /home/app
    #   dockerfile: Dockerfile
    build: ./authentication/
    restart: always
    ports:
      - "3000:3000"
    environment:
      - AUTH0_CLIENT_ID=AXp50hsCqyZ1XAPSVApPdjwsRe5uQXnm
      - AUTH0_CLIENT_SECRET=E2X2vEPuUgks4aGZmklNETUlJLDQVM6ovO4oE490ygzne-aHPikOUgFsCvezhtHX
      - AUTH0_DOMAIN=dev-qutwdxkzspl8b4oi.us.auth0.com
      - APP_SECRET_KEY=e497c51f1a201412cfb13ae8837fd5a81d3740bd52bf12b22300c31af8d7c462
      - FE_HOST=127.0.0.1
      - FE_PORT=88
    # volumes:
    #   - auth_data:/code
    depends_on: #This is a lie
      - frontend

  minio:
    container_name: minio
    image: docker.io/bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_DEFAULT_BUCKETS=experience:public
      - MINIO_ROOT_USER=minioUser
      - MINIO_ROOT_PASSWORD=minioPass
      - MINIO_SERVER_ACCESS_KEY=minioUser
      - MINIO_SERVER_SECRET_KEY=minioPass
    volumes:
      - minio_data:/data

volumes:
  # auth_data:
  #   driver: local
  minio_data:
    driver: local
  db:
    driver: local
